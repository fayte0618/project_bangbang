//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class MetaContext {

    public MetaEntity screenServiceEntity { get { return GetGroup(MetaMatcher.ScreenService).GetSingleEntity(); } }
    public ScreenServiceComponent screenService { get { return screenServiceEntity.screenService; } }
    public bool hasScreenService { get { return screenServiceEntity != null; } }

    public MetaEntity SetScreenService(IScreenService newCurrent) {
        if (hasScreenService) {
            throw new Entitas.EntitasException("Could not set ScreenService!\n" + this + " already has an entity with ScreenServiceComponent!",
                "You should check if the context already has a screenServiceEntity before setting it or use context.ReplaceScreenService().");
        }
        var entity = CreateEntity();
        entity.AddScreenService(newCurrent);
        return entity;
    }

    public void ReplaceScreenService(IScreenService newCurrent) {
        var entity = screenServiceEntity;
        if (entity == null) {
            entity = SetScreenService(newCurrent);
        } else {
            entity.ReplaceScreenService(newCurrent);
        }
    }

    public void RemoveScreenService() {
        screenServiceEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class MetaEntity {

    public ScreenServiceComponent screenService { get { return (ScreenServiceComponent)GetComponent(MetaComponentsLookup.ScreenService); } }
    public bool hasScreenService { get { return HasComponent(MetaComponentsLookup.ScreenService); } }

    public void AddScreenService(IScreenService newCurrent) {
        var index = MetaComponentsLookup.ScreenService;
        var component = CreateComponent<ScreenServiceComponent>(index);
        component.current = newCurrent;
        AddComponent(index, component);
    }

    public void ReplaceScreenService(IScreenService newCurrent) {
        var index = MetaComponentsLookup.ScreenService;
        var component = CreateComponent<ScreenServiceComponent>(index);
        component.current = newCurrent;
        ReplaceComponent(index, component);
    }

    public void RemoveScreenService() {
        RemoveComponent(MetaComponentsLookup.ScreenService);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class MetaMatcher {

    static Entitas.IMatcher<MetaEntity> _matcherScreenService;

    public static Entitas.IMatcher<MetaEntity> ScreenService {
        get {
            if (_matcherScreenService == null) {
                var matcher = (Entitas.Matcher<MetaEntity>)Entitas.Matcher<MetaEntity>.AllOf(MetaComponentsLookup.ScreenService);
                matcher.componentNames = MetaComponentsLookup.componentNames;
                _matcherScreenService = matcher;
            }

            return _matcherScreenService;
        }
    }
}
