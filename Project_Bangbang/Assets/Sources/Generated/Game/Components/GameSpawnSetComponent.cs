//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity spawnSetEntity { get { return GetGroup(GameMatcher.SpawnSet).GetSingleEntity(); } }
    public SpawnSetComponent spawnSet { get { return spawnSetEntity.spawnSet; } }
    public bool hasSpawnSet { get { return spawnSetEntity != null; } }

    public GameEntity SetSpawnSet(int newCurrID) {
        if (hasSpawnSet) {
            throw new Entitas.EntitasException("Could not set SpawnSet!\n" + this + " already has an entity with SpawnSetComponent!",
                "You should check if the context already has a spawnSetEntity before setting it or use context.ReplaceSpawnSet().");
        }
        var entity = CreateEntity();
        entity.AddSpawnSet(newCurrID);
        return entity;
    }

    public void ReplaceSpawnSet(int newCurrID) {
        var entity = spawnSetEntity;
        if (entity == null) {
            entity = SetSpawnSet(newCurrID);
        } else {
            entity.ReplaceSpawnSet(newCurrID);
        }
    }

    public void RemoveSpawnSet() {
        spawnSetEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public SpawnSetComponent spawnSet { get { return (SpawnSetComponent)GetComponent(GameComponentsLookup.SpawnSet); } }
    public bool hasSpawnSet { get { return HasComponent(GameComponentsLookup.SpawnSet); } }

    public void AddSpawnSet(int newCurrID) {
        var index = GameComponentsLookup.SpawnSet;
        var component = CreateComponent<SpawnSetComponent>(index);
        component.currID = newCurrID;
        AddComponent(index, component);
    }

    public void ReplaceSpawnSet(int newCurrID) {
        var index = GameComponentsLookup.SpawnSet;
        var component = CreateComponent<SpawnSetComponent>(index);
        component.currID = newCurrID;
        ReplaceComponent(index, component);
    }

    public void RemoveSpawnSet() {
        RemoveComponent(GameComponentsLookup.SpawnSet);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherSpawnSet;

    public static Entitas.IMatcher<GameEntity> SpawnSet {
        get {
            if (_matcherSpawnSet == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.SpawnSet);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherSpawnSet = matcher;
            }

            return _matcherSpawnSet;
        }
    }
}
