//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public PowerupActivatedListenerComponent powerupActivatedListener { get { return (PowerupActivatedListenerComponent)GetComponent(GameComponentsLookup.PowerupActivatedListener); } }
    public bool hasPowerupActivatedListener { get { return HasComponent(GameComponentsLookup.PowerupActivatedListener); } }

    public void AddPowerupActivatedListener(System.Collections.Generic.List<IPowerupActivatedListener> newValue) {
        var index = GameComponentsLookup.PowerupActivatedListener;
        var component = CreateComponent<PowerupActivatedListenerComponent>(index);
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplacePowerupActivatedListener(System.Collections.Generic.List<IPowerupActivatedListener> newValue) {
        var index = GameComponentsLookup.PowerupActivatedListener;
        var component = CreateComponent<PowerupActivatedListenerComponent>(index);
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemovePowerupActivatedListener() {
        RemoveComponent(GameComponentsLookup.PowerupActivatedListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherPowerupActivatedListener;

    public static Entitas.IMatcher<GameEntity> PowerupActivatedListener {
        get {
            if (_matcherPowerupActivatedListener == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.PowerupActivatedListener);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherPowerupActivatedListener = matcher;
            }

            return _matcherPowerupActivatedListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public void AddPowerupActivatedListener(IPowerupActivatedListener value) {
        var listeners = hasPowerupActivatedListener
            ? powerupActivatedListener.value
            : new System.Collections.Generic.List<IPowerupActivatedListener>();
        listeners.Add(value);
        ReplacePowerupActivatedListener(listeners);
    }

    public void RemovePowerupActivatedListener(IPowerupActivatedListener value, bool removeComponentWhenEmpty = true) {
        var listeners = powerupActivatedListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemovePowerupActivatedListener();
        } else {
            ReplacePowerupActivatedListener(listeners);
        }
    }
}
